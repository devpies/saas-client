name: client-frontend

on:
  push:
    paths:
      - ".github/workflows/client-frontend.yaml"
      - "src/**"
      - "nginx/**"
      - "public/**"
      - "amplify/**"
      - "package.json"
      - "package-lock.json"
      - "tsconfig.json"
      - "Dockerfile"

env:
  REACT_APP_USER_POOL_ID: ${{ secrets.REACT_APP_USER_POOL_ID }}
  REACT_APP_USER_POOL_CLIENT_ID: ${{ secrets.REACT_APP_USER_POOL_CLIENT_ID }}

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Amplify setup
        run: |
          cat << EOF > ./src/aws-exports.js
          const awsmobile = {
            "aws_project_region": "eu-central-1"
          };
          export default awsmobile;
          EOF

      - name: Environment setup
        run: |
          cat << EOF > .env
          REACT_APP_USER_POOL_ID=$REACT_APP_USER_POOL_ID
          REACT_APP_USER_POOL_CLIENT_ID=$REACT_APP_USER_POOL_CLIENT_ID
          REACT_APP_BACKEND=https://api-dev.devpie.io/api
          EOF

      - name: Install
        run: npm i

      - name: Test
        run: npm test - --passWithNoTests

      - name: Build
        run: npm run build

      - name: Archive artifact
        uses: actions/upload-artifact@v3
        with:
          name: static-client-assets
          path: build

      - name: Build and Push Image
        env:
          IMAGE: client
          OWNER: ${{ github.repository_owner }}
        run: |
          export SHA=$(git rev-parse --short HEAD)
          
          docker build --tag ghcr.io/$OWNER/$IMAGE:$SHA .
          docker push ghcr.io/$OWNER/$IMAGE:$SHA

          echo $OWNER/$IMAGE:$SHA > .build-version

          cat > patch.sh <<EOF
          #!/bin/bash
          sed -i 's/$IMAGE:.*/$IMAGE:$SHA/' ./main/manifests/$IMAGE-frontend.yaml
          EOF

          chmod +x patch.sh

      - uses: actions/checkout@v2
        with:
          repository: devpies/saas-infra
          token: ${{ secrets.PAT }}
          path: main
      - run: |
          ./patch.sh
          export VERSION=$(cat .build-version)

          cd main
          git config --local user.email github-actions@github.com
          git config --local user.name github-actions
          git add .
          git commit -m "new release: $VERSION"
          git push
  deploy:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        id: client
        with:
          name: static-client-assets

      - name: Print download path
        run: echo ${{steps.client.outputs.download-path}}

      - name: Terraform Apply
        run: |
          ls -l
          cd infra/dev
          terraform init
          terraform plan && terraform apply --auto-approve
          
          cd ../../build
          aws s3 sync . s3://www.dev.devpie.io